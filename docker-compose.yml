version: "3.9"

services:
  mq:
    container_name: mq
    image: rabbitmq:3.8-management-alpine
    env_file:
      - ./mq/.env
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
    ports:
      - 5673:5672
      - 15673:15672
    volumes:
      - ./mq/data/:/var/lib/rabbitmq/
      - ./mq/log/:/var/log/rabbitmq
    networks:
      - shrp

  mq_consumer_service:
    container_name: mq_consumer_service
    image: node:alpine
    #command: npm start #production
    command: sh -c 'npm ci && npm run watch' #pour le développement seulement
    env_file:
      - ./mq_consumer_service/.env
    working_dir: /usr/src/app
    volumes:
      - ./mq_consumer_service:/usr/src/app #synchronise le répertoire local ./mq_consumer_service avec le répertoire du container /usr/src/app
    ports:
      - 3333:3000 #associe le port local 3333 au port 3000 du container
    networks:
      - shrp
    depends_on:
      mq:
        condition: service_healthy

  mq_provider_service:
    container_name: mq_provider_service
    image: node:alpine
    #command: npm start #production
    command: sh -c 'npm ci && npm run watch' #pour le développement seulement
    env_file:
      - ./mq_provider_service/.env
    working_dir: /usr/src/app
    volumes:
      - ./mq_provider_service:/usr/src/app #synchronise le répertoire local ./mq_provider_service avec le répertoire du container /usr/src/app
    ports:
      - 3334:3000 #associe le port local 3333 au port 3000 du container
    networks:
      - shrp
    depends_on:
      mq:
        condition: service_healthy

networks:
  shrp:
    driver: bridge
